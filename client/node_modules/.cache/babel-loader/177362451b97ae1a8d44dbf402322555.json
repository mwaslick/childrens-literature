{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maria/code/childrens-literature/client/src/pages/BookSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport API from '../utils/apiroutes';\nimport Searchbar from '../components/Searchbar/Searchbar';\nimport BookResult from '../components/BookResult/BookResult';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nexport default function BookSearch() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleInputChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    async function showResults() {\n      if (searchTerm) {\n        await searchFunction(searchTerm).then(results => {\n          setSearchResults(results);\n        });\n      }\n    }\n\n    showResults();\n  }, [searchTerm]);\n\n  const searchFunction = searchTerm => {\n    var startIndex = 1;\n    let searchData = [];\n\n    if (!searchTerm) {\n      console.log(\"no search term\");\n      return;\n    } else {\n      for (var i = 0; i <= 2; i++) {\n        startIndex = 40 * i + 1;\n        API.searchBooks(searchTerm, startIndex).then(results => {\n          results.data.items.forEach(item => {\n            if (typeof item.volumeInfo.categories !== 'undefined') {\n              if (item.volumeInfo.categories.includes(\"Juvenile Fiction\") || item.volumeInfo.categories.includes(\"Juvenile Nonfiction\")) {\n                searchData.push(item);\n              }\n            }\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n\n      return searchData;\n    }\n  };\n\n  const renderAuthors = authors => {\n    if (Array.isArray(authors)) {\n      return authors.join(\", \");\n    } else if (!authors) {\n      return \"Unknown\";\n    } else {\n      return authors;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      search: searchFunction,\n      handleChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      sm: 12,\n      children: searchResults.map(book => {\n        return /*#__PURE__*/_jsxDEV(BookResult, {\n          title: book.volumeInfo.title,\n          authors: book.volumeInfo.authors,\n          author: renderAuthors,\n          image: book.volumeInfo.imageLinks.thumbnail,\n          link: book.volumeInfo.infoLink\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookSearch, \"vFVq2CqhFvuwfi/Qub5hbBnO1R0=\");\n\n_c = BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["/Users/maria/code/childrens-literature/client/src/pages/BookSearch.js"],"names":["React","useState","useEffect","API","Searchbar","BookResult","Container","Row","BookSearch","searchTerm","setSearchTerm","searchResults","setSearchResults","handleInputChange","event","target","value","showResults","searchFunction","then","results","startIndex","searchData","console","log","i","searchBooks","data","items","forEach","item","volumeInfo","categories","includes","push","catch","err","renderAuthors","authors","Array","isArray","join","map","book","title","imageLinks","thumbnail","infoLink","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport API from '../utils/apiroutes';\nimport Searchbar from '../components/Searchbar/Searchbar'\nimport BookResult from '../components/BookResult/BookResult'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\nexport default function BookSearch() {\n\n    const [searchTerm, setSearchTerm] = useState(\"\")\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleInputChange = event => {\n        setSearchTerm(event.target.value)\n    };\n\n    useEffect(() => {\n        async function showResults() {\n            if (searchTerm) {\n                await searchFunction(searchTerm)\n                .then(results => {\n    \n                    setSearchResults(results)\n                })\n            }\n        }\n        showResults()\n\n    }, [searchTerm])\n\n    const searchFunction = searchTerm => {\n        var startIndex = 1;\n        let searchData = [];\n        if (!searchTerm) {\n            console.log(\"no search term\")\n            return\n        }\n        else {\n            for (var i = 0; i <= 2; i ++) {\n                startIndex = (40 * i) + 1\n                API.searchBooks(searchTerm, startIndex)\n                .then (results => {\n                    results.data.items.forEach(item => {\n                        if (typeof item.volumeInfo.categories !== 'undefined') {\n                            if (item.volumeInfo.categories.includes(\"Juvenile Fiction\") || item.volumeInfo.categories.includes(\"Juvenile Nonfiction\")) {\n                                searchData.push(item)\n                            }\n                    }})\n                   \n            }).catch(err => {\n                console.log(err)\n            })\n        }\n        return searchData\n        }}\n    \n\n    const renderAuthors = (authors) => {\n        if (Array.isArray(authors)) {\n           return authors.join(\", \")\n        } else if (!authors) {\n            return \"Unknown\"\n        } else {\n            return(authors)\n        }\n    }\n\n    return (\n        <Container>\n             <Searchbar\n             search= {searchFunction}\n             handleChange= {handleInputChange}\n             />\n\n        <Row className=\"justify-content-md-center\" sm={12}>\n\n\n\n            {searchResults.map(book => {\n                return <BookResult\n                key= {book.id}\n                title= {book.volumeInfo.title}\n                authors= {book.volumeInfo.authors}\n                author = {renderAuthors}\n                image= {book.volumeInfo.imageLinks.thumbnail}\n                link= {book.volumeInfo.infoLink}\n                />\n\n            })}\n\n            </Row>\n           \n\n        </Container>\n       \n\n    )\n}"]},"metadata":{},"sourceType":"module"}