{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maria/code/childrens-literature/client/src/pages/BookSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport API from '../utils/apiroutes';\nimport Searchbar from '../components/Searchbar/Searchbar';\nimport Container from 'react-bootstrap/Container';\nexport default function BookSearch() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const searchFunction = event => {\n    event.preventDefault();\n\n    if (!searchTerm) {\n      console.log(\"no search term\");\n      return;\n    } else API.searchBooks(searchTerm).then(results => {\n      let searchResults = [];\n      console.log(results.items);\n      results.items.forEach(item => {\n        if (item.volumeInfo.categories.includes(\"Juvenile Fiction\")) {\n          searchResults.push(item);\n        }\n      });\n      console.log(searchResults);\n      setSearchResults(searchResults);\n      return searchResults;\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Searchbar, {\n      searchTerm: searchTerm,\n      handleChange: handleChange,\n      searchFunction: searchFunction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookSearch, \"8K28tzN6aqWupSuTIMzTiRsrFxY=\");\n\n_c = BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["/Users/maria/code/childrens-literature/client/src/pages/BookSearch.js"],"names":["React","useState","useEffect","API","Searchbar","Container","BookSearch","searchTerm","setSearchTerm","searchResults","setSearchResults","handleChange","event","target","value","searchFunction","preventDefault","console","log","searchBooks","then","results","items","forEach","item","volumeInfo","categories","includes","push","catch","err"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMU,YAAY,GAAGC,KAAK,IAAI;AAC1BJ,IAAAA,aAAa,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,QAAMC,cAAc,GAAGH,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACI,cAAN;;AACA,QAAI,CAACT,UAAL,EAAiB;AACbU,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA;AACH,KAHD,MAIKf,GAAG,CAACgB,WAAJ,CAAgBZ,UAAhB,EACJa,IADI,CACEC,OAAO,IAAI;AACf,UAAIZ,aAAa,GAAG,EAApB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYG,OAAO,CAACC,KAApB;AACAD,MAAAA,OAAO,CAACC,KAAR,CAAcC,OAAd,CAAuBC,IAAD,IAAU;AAC5B,YAAIA,IAAI,CAACC,UAAL,CAAgBC,UAAhB,CAA2BC,QAA3B,CAAoC,kBAApC,CAAJ,EAA6D;AACzDlB,UAAAA,aAAa,CAACmB,IAAd,CAAmBJ,IAAnB;AACH;AACJ,OAJD;AAKAP,MAAAA,OAAO,CAACC,GAAR,CAAYT,aAAZ;AACAC,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACA,aAAOA,aAAP;AACF,KAZI,EAYFoB,KAZE,CAYIC,GAAG,IAAI;AACZb,MAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACH,KAdI;AAeR,GArBD;;AAwBA,sBACI,QAAC,SAAD;AAAA,2BACK,QAAC,SAAD;AACA,MAAA,UAAU,EAAGvB,UADb;AAEA,MAAA,YAAY,EAAGI,YAFf;AAGA,MAAA,cAAc,EAAGI;AAHjB;AAAA;AAAA;AAAA;AAAA;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA9CuBT,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport API from '../utils/apiroutes';\nimport Searchbar from '../components/Searchbar/Searchbar'\nimport Container from 'react-bootstrap/Container'\n\nexport default function BookSearch() {\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleChange = event => {\n        setSearchTerm(event.target.value)\n    };\n\n    const searchFunction = event => {\n        event.preventDefault();\n        if (!searchTerm) {\n            console.log(\"no search term\")\n            return\n        }\n        else API.searchBooks(searchTerm)\n        .then (results => {\n           let searchResults = [];\n           console.log(results.items)\n           results.items.forEach((item) => {\n               if (item.volumeInfo.categories.includes(\"Juvenile Fiction\")) {\n                   searchResults.push(item)  \n               }\n           })\n           console.log(searchResults);\n           setSearchResults(searchResults);\n           return searchResults\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n\n    return (\n        <Container>\n             <Searchbar\n             searchTerm= {searchTerm}\n             handleChange= {handleChange} \n             searchFunction= {searchFunction}\n             />\n\n\n        </Container>\n       \n\n    )\n}"]},"metadata":{},"sourceType":"module"}