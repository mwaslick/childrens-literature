{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/maria/code/childrens-literature/client/src/pages/BookSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport API from '../utils/apiroutes';\nimport Searchbar from '../components/Searchbar/Searchbar';\nimport BookResult from '../components/BookResult/BookResult';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nexport default function BookSearch() {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  const handleChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  useEffect(() => {\n    let startIndex = 1;\n    let searchData = [];\n\n    async function getResults() {\n      await API.searchBooks(searchTerm, startIndex).then(results => {\n        setSearchResults(results.data.items);\n      });\n    }\n  }, [searchResults]); // const searchFunction = event => {\n  //     event.preventDefault();\n  //     var startIndex = 1;\n  //     let searchData = [];\n  //     if (!searchTerm) {\n  //         console.log(\"no search term\")\n  //         return\n  //     }\n  //     else {\n  //         for (var i = 0; i <= 2; i ++) {\n  //             startIndex = (40 * i) + 1\n  //             API.searchBooks(searchTerm, startIndex)\n  //             .then (results => {\n  //                 results.data.items.forEach(item => {\n  //                     if (typeof item.volumeInfo.categories !== 'undefined') {\n  //                         if (item.volumeInfo.categories.includes(\"Juvenile Fiction\") || item.volumeInfo.categories.includes(\"Juvenile Nonfiction\")) {\n  //                             searchData.push(item)\n  //                         }\n  //                 }})\n  //         }).catch(err => {\n  //             console.log(err)\n  //         })\n  //     }\n  //     console.log(searchData)\n  //     return (searchData)\n  //     }}\n  // const renderAuthors = (authors) => {\n  //     if (Array.isArray(authors)) {\n  //        return authors.join(\", \")\n  //     } else if (!authors) {\n  //         return \"Unknown\"\n  //     } else {\n  //         return(authors)\n  //     }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Searchbar, {\n      searchTerm: searchTerm,\n      handleChange: handleChange,\n      searchFunction: searchFunction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      sm: 12,\n      children: searchResults.map(book => {\n        return /*#__PURE__*/_jsxDEV(BookResult, {\n          title: book.volumeInfo.title,\n          authors: book.volumeInfo.authors,\n          author: renderAuthors,\n          image: book.volumeInfo.imageLinks.thumbnail,\n          link: book.volumeInfo.infoLink\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BookSearch, \"vFVq2CqhFvuwfi/Qub5hbBnO1R0=\");\n\n_c = BookSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookSearch\");","map":{"version":3,"sources":["/Users/maria/code/childrens-literature/client/src/pages/BookSearch.js"],"names":["React","useState","useEffect","API","Searchbar","BookResult","Container","Row","BookSearch","searchTerm","setSearchTerm","searchResults","setSearchResults","handleChange","event","target","value","startIndex","searchData","getResults","searchBooks","then","results","data","items","searchFunction","map","book","volumeInfo","title","authors","renderAuthors","imageLinks","thumbnail","infoLink","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AAEjC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;;AAEA,QAAMY,YAAY,GAAGC,KAAK,IAAI;AAC1BJ,IAAAA,aAAa,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIe,UAAU,GAAG,CAAjB;AACA,QAAIC,UAAU,GAAG,EAAjB;;AACD,mBAAeC,UAAf,GAA4B;AACxB,YAAMhB,GAAG,CAACiB,WAAJ,CAAgBX,UAAhB,EAA4BQ,UAA5B,EACLI,IADK,CACAC,OAAO,IAAI;AACbV,QAAAA,gBAAgB,CAACU,OAAO,CAACC,IAAR,CAAaC,KAAd,CAAhB;AACH,OAHK,CAAN;AAIH;AACH,GATQ,EASN,CAACb,aAAD,CATM,CAAT,CATiC,CAoBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACI,QAAC,SAAD;AAAA,4BACK,QAAC,SAAD;AACA,MAAA,UAAU,EAAGF,UADb;AAEA,MAAA,YAAY,EAAGI,YAFf;AAGA,MAAA,cAAc,EAAGY;AAHjB;AAAA;AAAA;AAAA;AAAA,YADL,eAOA,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,2BAAf;AAA2C,MAAA,EAAE,EAAE,EAA/C;AAAA,gBAIKd,aAAa,CAACe,GAAd,CAAkBC,IAAI,IAAI;AACvB,4BAAO,QAAC,UAAD;AAEP,UAAA,KAAK,EAAGA,IAAI,CAACC,UAAL,CAAgBC,KAFjB;AAGP,UAAA,OAAO,EAAGF,IAAI,CAACC,UAAL,CAAgBE,OAHnB;AAIP,UAAA,MAAM,EAAIC,aAJH;AAKP,UAAA,KAAK,EAAGJ,IAAI,CAACC,UAAL,CAAgBI,UAAhB,CAA2BC,SAL5B;AAMP,UAAA,IAAI,EAAGN,IAAI,CAACC,UAAL,CAAgBM;AANhB,WACDP,IAAI,CAACQ,EADJ;AAAA;AAAA;AAAA;AAAA,gBAAP;AASH,OAVA;AAJL;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH;;GA1FuB3B,U;;KAAAA,U","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport API from '../utils/apiroutes';\nimport Searchbar from '../components/Searchbar/Searchbar'\nimport BookResult from '../components/BookResult/BookResult'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\n\nexport default function BookSearch() {\n\n    const [searchTerm, setSearchTerm] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n\n    const handleChange = event => {\n        setSearchTerm(event.target.value)\n    };\n\n    useEffect(() => {\n        let startIndex = 1;\n        let searchData = [];\n       async function getResults() {\n           await API.searchBooks(searchTerm, startIndex)\n           .then(results => {\n               setSearchResults(results.data.items)\n           })\n       }\n    }, [searchResults])\n\n    // const searchFunction = event => {\n    //     event.preventDefault();\n    //     var startIndex = 1;\n    //     let searchData = [];\n    //     if (!searchTerm) {\n    //         console.log(\"no search term\")\n    //         return\n    //     }\n    //     else {\n    //         for (var i = 0; i <= 2; i ++) {\n    //             startIndex = (40 * i) + 1\n    //             API.searchBooks(searchTerm, startIndex)\n    //             .then (results => {\n    //                 results.data.items.forEach(item => {\n    //                     if (typeof item.volumeInfo.categories !== 'undefined') {\n    //                         if (item.volumeInfo.categories.includes(\"Juvenile Fiction\") || item.volumeInfo.categories.includes(\"Juvenile Nonfiction\")) {\n    //                             searchData.push(item)\n    //                         }\n    //                 }})\n                   \n    //         }).catch(err => {\n    //             console.log(err)\n    //         })\n    //     }\n    //     console.log(searchData)\n    //     return (searchData)\n    //     }}\n    \n\n    // const renderAuthors = (authors) => {\n    //     if (Array.isArray(authors)) {\n    //        return authors.join(\", \")\n    //     } else if (!authors) {\n    //         return \"Unknown\"\n    //     } else {\n    //         return(authors)\n    //     }\n    // }\n\n    return (\n        <Container>\n             <Searchbar\n             searchTerm= {searchTerm}\n             handleChange= {handleChange} \n             searchFunction= {searchFunction}\n             />\n\n        <Row className=\"justify-content-md-center\" sm={12}>\n\n\n\n            {searchResults.map(book => {\n                return <BookResult\n                key= {book.id}\n                title= {book.volumeInfo.title}\n                authors= {book.volumeInfo.authors}\n                author = {renderAuthors}\n                image= {book.volumeInfo.imageLinks.thumbnail}\n                link= {book.volumeInfo.infoLink}\n                />\n\n            })}\n\n            </Row>\n           \n\n        </Container>\n       \n\n    )\n}"]},"metadata":{},"sourceType":"module"}